---
# Provision servers using the linode v4 api
- name: Deploy development server infrastructure
  hosts: localhost
  connection: local
  gather_facts: false

  vars_files:
    - ./group_vars/main.yml
    - ./group_vars/secrets.yml

  tasks:

    - name: Create a Linode instance
      community.general.linode_v4:
        access_token: "{{ api_token }}"
        root_pass: "{{ password }}"
        label: "{{ linode_label }}"
        type: g6-nanode-1
        region: "{{ linode_region }}"
        image: "{{ linode_image }}"
        private_ip: false
        authorized_keys:
          - "{{ ssh_key_dir }}/{{ ssh_key_name }}.pub}}"  # this installs the pub key on remote server
        state: present
      register: linode_instance

    - name: Get info about the server
      linode.cloud.instance_info:
        api_token: '{{ api_token }}'
        label: '{{ linode_label }}'
      register: server_info

    - name: Set some facts
      ansible.builtin.set_fact:
        server_ip: '{{ server_info.instance.ipv4[0] }}'

    - name: Adding the new box to the dynamic inventory
      ansible.builtin.add_host:
        name: "{{ linode_instance.instance.label }}"
        groups: "{{ group_name }}"
        ansible_host: "{{ server_ip }}"
        ansible_user: root
        ansible_ssh_extra_args: '-o StrictHostKeyChecking=no'
      when: linode_instance.instance.changed is defined
      changed_when: true

    - name: Ensure inventory file exists
      ansible.builtin.copy:
        content: ""
        dest: "{{ inventory_file }}"
        force: false
        mode: "0555"

    - name: Add the newly created instance(s) to the local host group
      ansible.builtin.blockinfile:
        path: "{{ inventory_file }}"
        block: |
            all:
              hosts:
                "{{ linode_label }}":
                  ansible_host: "{{ server_ip }}"
                  ansible_ssh_user: root
                  ansible_private_key_file: "{{ ssh_key_dir }}/{{ ssh_key_name }}"

    - name: Wait for SSH to come up
      ansible.builtin.wait_for:
        host: "{{ server_ip }}"
        port: 22
        search_regex: OpenSSH
        delay: 10
      connection: local
      with_items:
        - "{{ linode_instance }}"
