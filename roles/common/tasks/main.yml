---
# roles/common/tasks/main.yml

- name: Set the hostname based on the server's label
  become: true
  ansible.builtin.hostname:
    name: "{{ inventory_hostname }}"

- name: Ensure the hostname is added to /etc/hosts
  become: true
  ansible.builtin.lineinfile:
    path: /etc/hosts
    line: "127.0.0.1 {{ inventory_hostname }}"
    state: present

- name: Set timezone appropriately
  become: true
  community.general.timezone:
    name: "{{ timezone }}"

- name: Apt update
  ansible.builtin.apt:
    update_cache: true

- name: Apt upgrade
  ansible.builtin.apt:
    upgrade: full

- name: Install basic packages
  ansible.builtin.apt:
    pkg:
      - ntp
      - gnupg2
      - wget
      - curl
      - htop
      - rsync
      - fail2ban
      - python3-pip
      - net-tools
      - apt-transport-https
      - ufw
    state: present

# remove fail2ban
- name: Fail2ban jail.local
  ansible.builtin.copy:
    src: /etc/fail2ban/jail.conf
    dest: /etc/fail2ban/jail.local
    remote_src: true
    mode: '0600'
  notify: Start fail2ban

- name: Secure ssh configs
  ansible.builtin.lineinfile:
    path: /etc/ssh/sshd_config
    regexp: "{{ item.regexp }}"
    line: "{{ item.line }}"
  with_items:
    - { regexp: '^\#?PermitRootLogin (yes|no)', line: 'PermitRootLogin without-password' }
    - { regexp: '^\#?PasswordAuthentication (yes|no)', line: 'PasswordAuthentication no' }
    - { regexp: '^\#?PubkeyAuthentication (yes|no)', line: 'PubkeyAuthentication yes' }
  notify: Restart ssh

- name: Apply ufw rules
  ansible.builtin.import_tasks: ufw.yml

- name: Create groups
  ansible.builtin.group:
    name: "{{ admin_group }}"
    state: present

- name: Create user accounts
  ansible.builtin.user:
    name: "{{ item }}"
    groups: "{{ admin_group }}"
  with_items: "{{ users }}"

- name: Add authorized keys
  ansible.posix.authorized_key:
    user: "{{ item }}"
    key: "{{ lookup('file', '{{ local_home }}' + '/.ssh/' + '{{ ssh_key_name }}' + '.pub') }}"
  with_items: "{{ users }}"

- name: Allow admin users to sudo without a password
  ansible.builtin.lineinfile:
    dest: "/etc/sudoers" # path: in version 2.3
    state: "present"
    regexp: "^%admin"
    line: "%admin ALL=(ALL) NOPASSWD: ALL"

# - name: set _domain variable
#   import_tasks: domain.yml
#   run_once: true
#   delegate_to: "localhost"
#   tags: dns

# # dns creation
# - name: create dns A record
#   import_tasks: create_dns_record.yml
#   run_once: true
#   delegate_to: "localhost"
#   when:
#     - api_token is defined
#     - default_dns is not defined
#   tags: dns
